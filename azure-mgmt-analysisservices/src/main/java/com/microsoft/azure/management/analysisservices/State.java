/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.analysisservices;

import com.fasterxml.jackson.annotation.JsonValue;

/**
 * Defines values for State.
 */
public final class State {
    /** Static value Deleting for State. */
    public static final State DELETING = new State("Deleting");

    /** Static value Succeeded for State. */
    public static final State SUCCEEDED = new State("Succeeded");

    /** Static value Failed for State. */
    public static final State FAILED = new State("Failed");

    /** Static value Paused for State. */
    public static final State PAUSED = new State("Paused");

    /** Static value Suspended for State. */
    public static final State SUSPENDED = new State("Suspended");

    /** Static value Provisioning for State. */
    public static final State PROVISIONING = new State("Provisioning");

    /** Static value Updating for State. */
    public static final State UPDATING = new State("Updating");

    /** Static value Suspending for State. */
    public static final State SUSPENDING = new State("Suspending");

    /** Static value Pausing for State. */
    public static final State PAUSING = new State("Pausing");

    /** Static value Resuming for State. */
    public static final State RESUMING = new State("Resuming");

    /** Static value Preparing for State. */
    public static final State PREPARING = new State("Preparing");

    /** Static value Scaling for State. */
    public static final State SCALING = new State("Scaling");

    private String value;

    /**
     * Creates a custom value for State.
     * @param value the custom value
     */
    public State(String value) {
        this.value = value;
    }

    @JsonValue
    @Override
    public String toString() {
        return value;
    }

    @Override
    public int hashCode() {
        return value.hashCode();
    }

    @Override
    public boolean equals(Object obj) {
        if (!(obj instanceof State)) {
            return false;
        }
        if (obj == this) {
            return true;
        }
        State rhs = (State) obj;
        if (value == null) {
            return rhs.value == null;
        } else {
            return value.equals(rhs.value);
        }
    }
}
