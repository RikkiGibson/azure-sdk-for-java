/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.analysisservices.implementation;

import com.microsoft.azure.management.analysisservices.ServerAdministrators;
import com.microsoft.azure.management.analysisservices.State;
import com.microsoft.azure.management.analysisservices.ProvisioningState;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.microsoft.rest.serializer.JsonFlatten;
import com.microsoft.azure.Resource;

/**
 * Represents an instance of an Analysis Services resource.
 */
@JsonFlatten
public class AnalysisServicesServerInner extends Resource {
    /**
     * A collection of AS server administrators.
     */
    @JsonProperty(value = "properties.asAdministrators")
    private ServerAdministrators asAdministrators;

    /**
     * The container URI of backup blob.
     */
    @JsonProperty(value = "properties.backupBlobContainerUri")
    private String backupBlobContainerUri;

    /**
     * The current state of Analysis Services resource. The state is to
     * indicate more states outside of resource provisioning. Possible values
     * include: 'Deleting', 'Succeeded', 'Failed', 'Paused', 'Suspended',
     * 'Provisioning', 'Updating', 'Suspending', 'Pausing', 'Resuming',
     * 'Preparing', 'Scaling'.
     */
    @JsonProperty(value = "properties.state", access = JsonProperty.Access.WRITE_ONLY)
    private State state;

    /**
     * The current deployment state of Analysis Services resource. The
     * provisioningState is to indicate states for resource provisioning.
     * Possible values include: 'Deleting', 'Succeeded', 'Failed', 'Paused',
     * 'Suspended', 'Provisioning', 'Updating', 'Suspending', 'Pausing',
     * 'Resuming', 'Preparing', 'Scaling'.
     */
    @JsonProperty(value = "properties.provisioningState", access = JsonProperty.Access.WRITE_ONLY)
    private ProvisioningState provisioningState;

    /**
     * The full name of the Analysis Services resource.
     */
    @JsonProperty(value = "properties.serverFullName", access = JsonProperty.Access.WRITE_ONLY)
    private String serverFullName;

    /**
     * Get the asAdministrators value.
     *
     * @return the asAdministrators value
     */
    public ServerAdministrators asAdministrators() {
        return this.asAdministrators;
    }

    /**
     * Set the asAdministrators value.
     *
     * @param asAdministrators the asAdministrators value to set
     * @return the AnalysisServicesServerInner object itself.
     */
    public AnalysisServicesServerInner withAsAdministrators(ServerAdministrators asAdministrators) {
        this.asAdministrators = asAdministrators;
        return this;
    }

    /**
     * Get the backupBlobContainerUri value.
     *
     * @return the backupBlobContainerUri value
     */
    public String backupBlobContainerUri() {
        return this.backupBlobContainerUri;
    }

    /**
     * Set the backupBlobContainerUri value.
     *
     * @param backupBlobContainerUri the backupBlobContainerUri value to set
     * @return the AnalysisServicesServerInner object itself.
     */
    public AnalysisServicesServerInner withBackupBlobContainerUri(String backupBlobContainerUri) {
        this.backupBlobContainerUri = backupBlobContainerUri;
        return this;
    }

    /**
     * Get the state value.
     *
     * @return the state value
     */
    public State state() {
        return this.state;
    }

    /**
     * Get the provisioningState value.
     *
     * @return the provisioningState value
     */
    public ProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Get the serverFullName value.
     *
     * @return the serverFullName value
     */
    public String serverFullName() {
        return this.serverFullName;
    }

}
